#Each new term in the Fibonacci sequence is generated by adding the previous 
#two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not
#exceed four million, find the sum of the even-valued terms.
#By Saksham Madan
#for computer with less computational power
n = 4000000
def  Fibonacci(nterms):
    # first two terms
    result = 2
    fib3 = 2
    fib6 = 0
    arr = []
    while result < nterms:
        arr.append(result)
        result = 4*fib3 + fib6
        fib6 = fib3
        fib3 = result
    
    return arr

arr = []

arr = Fibonacci(n)
sum = 0

for i in arr:
    if i%2 == 0: #this step is redundant as the series generated is already even
        sum = sum + i

print(sum)
